#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

REGISTRY=${BUILDKITE_PLUGIN_NPM_GLOBAL_REGISTRY:-'//registry.npmjs.org/'}
TOKEN=${BUILDKITE_PLUGIN_NPM_GLOBAL_TOKEN:-''}
FILE=${BUILDKITE_PLUGIN_NPM_GLOBAL_FILE:-''}
ENV=${BUILDKITE_PLUGIN_NPM_GLOBAL_ENV:-''}
PACKAGE=${BUILDKITE_PLUGIN_NPM_GLOBAL_PACKAGE:-''}
AUTH_TYPE=${BUILDKITE_PLUGIN_NPM_GLOBAL_AUTHTYPE:-'TOKEN'}

if { [[ -n "${FILE}" ]] && [[ -n "${ENV}" ]]; } \
  || { [[ -n "${FILE}" ]] && [[ -n "${TOKEN}" ]]; } \
  || { [[ -n "${TOKEN}" ]] && [[ -n "${ENV}" ]]; }
then
  echo ':no_entry_sign: :npm: :package: Failed! Only one of file, env or token parameters may be set'
  exit 1
fi

if [[ -n "${FILE}" ]]
then
  TOKEN=$(cat "${FILE}")
elif [[ -n "${ENV}" ]]
then
  TOKEN="${!ENV}"
fi

if [[ -z "$TOKEN" ]]
then
  echo ':no_entry_sign: :npm: :package: Failed! A valid NPM_TOKEN could not be determined'
  exit 1
fi

echo '--- Setting up access for :no_entry_sign: :npm: :package:'

if [ "${AUTH_TYPE}" = "BASIC" ]; then
cat > "${HOME}/.npmrc" << EOF
registry=${REGISTRY}
_auth=${TOKEN}
EOF
else
cat > "${HOME}/.npmrc" << EOF
${REGISTRY}:_authToken=${TOKEN}
EOF
fi

node --version

# Check to see if we're logged in
npm whoami > /dev/null

# yarn vs NPM

if command -v yarn &> /dev/null
then
  echo "Running with yarn"
  mkdir -p "${HOME}/${BUILDKITE_AGENT_ID}/.npm-global"
  yarn config set prefix "${HOME}/${BUILDKITE_AGENT_ID}/.config/yarn/global"
  export PATH="$PATH:`yarn global bin`"
  # Install package we need.
  yarn global add "${PACKAGE}"
else
  echo "Running with npm"
  mkdir -p "${HOME}/${BUILDKITE_AGENT_ID}/.npm-global"
  npm config set prefix "${HOME}/${BUILDKITE_AGENT_ID}/.npm-global"
  export PATH="${HOME}/${BUILDKITE_AGENT_ID}/.npm-global/bin:$PATH"

  # Install package we need.
  npm install --global "${PACKAGE}"
fi
