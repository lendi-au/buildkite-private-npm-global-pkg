#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

REGISTRY=${BUILDKITE_PLUGIN_NPM_GLOBAL_REGISTRY:-'//registry.npmjs.org/'}
TOKEN=${BUILDKITE_PLUGIN_NPM_GLOBAL_TOKEN:-''}
FILE=${BUILDKITE_PLUGIN_NPM_GLOBAL_FILE:-''}
ENV=${BUILDKITE_PLUGIN_NPM_GLOBAL_ENV:-''}
PACKAGE=${BUILDKITE_PLUGIN_NPM_GLOBAL_PACKAGE:-''}

if { [[ -n "${FILE}" ]] && [[ -n "${ENV}" ]]; } \
  || { [[ -n "${FILE}" ]] && [[ -n "${TOKEN}" ]]; } \
  || { [[ -n "${TOKEN}" ]] && [[ -n "${ENV}" ]]; }
then
  echo ':no_entry_sign: :npm: :package: Failed! Only one of file, env or token parameters may be set'
  exit 1
fi

if [[ -n "${FILE}" ]]
then
  TOKEN=$(cat "${FILE}")
elif [[ -n "${ENV}" ]]
then
  TOKEN="${!ENV}"
fi

if [[ -z $TOKEN ]] 
then
  echo ':no_entry_sign: :npm: :package: Failed! A valid NPM_TOKEN could not be determined'
  exit 1
fi

echo '--- Setting up access for :no_entry_sign: :npm: :package:'

cat > ~/.npmrc << EOF
${REGISTRY}:_authToken=${TOKEN}
EOF

node --version

# Check to see if we're logged in
npm whoami > /dev/null

mkdir -p ~/.npm-global
npm config set prefix '~/.npm-global'
export PATH=~/.npm-global/bin:$PATH

# Install package we need.
npm install --global ${PACKAGE}